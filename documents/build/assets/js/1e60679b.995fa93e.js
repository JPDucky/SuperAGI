"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[251],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),d=r,b=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return a?n.createElement(b,i(i({ref:t},p),{},{components:a})):n.createElement(b,i({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4954:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={},i="GitHub Codespaces",l={unversionedId:"Installation Guide/gitcode",id:"Installation Guide/gitcode",title:"GitHub Codespaces",description:"1. Open the SuperAGI GitHub repository https://github.com/TransformerOptimus/SuperAGI/ and click on Code > Codespaces > Create new codespace",source:"@site/docs/Installation Guide/gitcode.md",sourceDirName:"Installation Guide",slug:"/Installation Guide/gitcode",permalink:"/docs/Installation Guide/gitcode",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI/website/docs/Installation Guide/gitcode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Win/MacOS/Linux",permalink:"/docs/Installation Guide/local"},next:{title:"Coding Tool",permalink:"/docs/Tools/coding_tool"}},c={},s=[{value:"OpenAI API Key",id:"openai-api-key",level:4},{value:"Google API key",id:"google-api-key",level:4},{value:"Custom Search Engine ID",id:"custom-search-engine-id",level:4}],p={toc:s},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"github-codespaces"},"GitHub Codespaces"),(0,r.kt)("iframe",{width:"800",height:"450",src:"https://www.youtube-nocookie.com/embed/iSPHZ1onQ44?controls=0",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open the SuperAGI GitHub repository ",(0,r.kt)("inlineCode",{parentName:"li"},"https://github.com/TransformerOptimus/SuperAGI/")," and click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Code > Codespaces > Create new codespace")),(0,r.kt)("li",{parentName:"ol"},"Navigate to the directory and create a copy of ",(0,r.kt)("inlineCode",{parentName:"li"},"config_template.yaml")," and name it ",(0,r.kt)("inlineCode",{parentName:"li"},"config.yaml"),"."),(0,r.kt)("li",{parentName:"ol"},"Enter your unique OpenAI API Key, Google key, Custom search engine ID without any quotes or spaces in ",(0,r.kt)("inlineCode",{parentName:"li"},"config.yaml")," file. Follow the links below to get your keys:")),(0,r.kt)("h4",{id:"openai-api-key"},"OpenAI API Key"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"https://beta.openai.com/signup/"},"https://beta.openai.com/signup/"),' and click on your name on the Top-Right of the Screen. Click on "View API Keys".'),(0,r.kt)("li",{parentName:"ul"},'Click on "Create new secret key".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/f016cf35-190b-4cce-99ce-4bb7adb22b76",alt:"create-secret-key"})),(0,r.kt)("li",{parentName:"ul"},'Enter a suitable name and click on "Create secret key".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/4c739e1c-390c-4b2c-b3f6-ea8064894528",alt:"create-new-key-page"}))),(0,r.kt)("h4",{id:"google-api-key"},"Google API key"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/"},"Google Cloud Console"),". "),(0,r.kt)("li",{parentName:"ul"},'Click on "Select Project".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/b9cf1f54-8f00-4437-b017-2ca881455a36",alt:"select-a-project"})),(0,r.kt)("li",{parentName:"ul"},'Click on "New Project".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/567be1ba-5a16-4165-b14b-096fb3cca87c",alt:"new-project"})),(0,r.kt)("li",{parentName:"ul"},"Choose a suitable name and create a new project.\n",(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/9cecfcd9-fb32-48ba-b53d-97638b7fe7b4",alt:"create-new-project"})),(0,r.kt)("li",{parentName:"ul"},'Go to "API and Services" from home page.\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/3c90bc08-9c79-4789-8c82-96a3077f479e",alt:"home-page"})),(0,r.kt)("li",{parentName:"ul"},'Click on "Credentials" and then click on "Create Credentials" on the top.\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/b45e0516-bde8-4aee-ade2-6b199550c9a7",alt:"create-credential"})),(0,r.kt)("li",{parentName:"ul"},'Click on "API Key" and your API Key will be created.\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/fbffd98c-7f7e-46c3-a66f-f74004a7437b",alt:"create-api-key"}))),(0,r.kt)("h4",{id:"custom-search-engine-id"},"Custom Search Engine ID"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Register using your gmail id."),(0,r.kt)("li",{parentName:"ul"},'Choose a suitable name and select "Search the entire web" and click on "Create".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/efa1fbd6-2449-4f60-b7c1-5a903eb90ff1",alt:"custom-search-engine"})),(0,r.kt)("li",{parentName:"ul"},'Click on "Customise" and copy the "Search Engine ID".\n',(0,r.kt)("img",{parentName:"li",src:"https://github.com/TransformerOptimus/SuperAGI/assets/43145646/be4fa59e-f23e-45fe-9aa8-5d7a547ab2be",alt:"search-engine-id"}))),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Open up the terminal at the bottom of the codespace and run the following command: ",(0,r.kt)("inlineCode",{parentName:"li"},"docker compose up --build")," and wait for the build to complete."),(0,r.kt)("li",{parentName:"ol"},"Go to the 'Ports' tab, copy the 8001 and 3000 public addresses. Replace the ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost")," link in the ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," file with the 8001 public address, and paste the 3000 public address as a string into the ",(0,r.kt)("inlineCode",{parentName:"li"},"main.py")," file."),(0,r.kt)("li",{parentName:"ol"},"Make sure to remove the trailing forward slash from the end of URL in both places."),(0,r.kt)("li",{parentName:"ol"},"Run the ",(0,r.kt)("inlineCode",{parentName:"li"},"docker compose up --build")," command again."),(0,r.kt)("li",{parentName:"ol"},"Once the build is complete, change the visibility of both ports to public and open the 3000 public URL in a new tab.")),(0,r.kt)("p",null,"You are now ready to expplore SuperAGI."))}m.isMDXComponent=!0}}]);