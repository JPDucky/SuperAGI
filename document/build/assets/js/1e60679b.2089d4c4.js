"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[251],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(k,i(i({ref:t},s),{},{components:n})):o.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4954:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const r={},i="GitHub Codespaces",l={unversionedId:"Installation Guide/gitcode",id:"Installation Guide/gitcode",title:"GitHub Codespaces",description:"1. Open the SuperAGI GitHub repository https://github.com/TransformerOptimus/SuperAGI/ and click on Code > Codespaces > Create new codespace",source:"@site/docs/Installation Guide/gitcode.md",sourceDirName:"Installation Guide",slug:"/Installation Guide/gitcode",permalink:"/docs/Installation Guide/gitcode",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI/website/docs/Installation Guide/gitcode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Win/MacOS/Linux",permalink:"/docs/Installation Guide/local"},next:{title:"Coding Tool",permalink:"/docs/Tools/coding_tool"}},c={},p=[{value:"OpenAI API Key",id:"openai-api-key",level:4},{value:"Google API key",id:"google-api-key",level:4},{value:"Custom Search Engine ID",id:"custom-search-engine-id",level:4}],s={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"github-codespaces"},"GitHub Codespaces"),(0,a.kt)("iframe",{width:"800",height:"450",src:"https://www.youtube-nocookie.com/embed/iSPHZ1onQ44?controls=0",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open the SuperAGI GitHub repository ",(0,a.kt)("inlineCode",{parentName:"li"},"https://github.com/TransformerOptimus/SuperAGI/")," and click on ",(0,a.kt)("inlineCode",{parentName:"li"},"Code > Codespaces > Create new codespace")),(0,a.kt)("li",{parentName:"ol"},"Navigate to the directory and create a copy of ",(0,a.kt)("inlineCode",{parentName:"li"},"config_template.yaml")," and name it ",(0,a.kt)("inlineCode",{parentName:"li"},"config.yaml"),"."),(0,a.kt)("li",{parentName:"ol"},"Enter your unique OpenAI API Key, Google key, Custom search engine ID without any quotes or spaces in ",(0,a.kt)("inlineCode",{parentName:"li"},"config.yaml")," file. Follow the links below to get your keys:")),(0,a.kt)("h4",{id:"openai-api-key"},"OpenAI API Key"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go to ",(0,a.kt)("a",{parentName:"li",href:"https://beta.openai.com/signup/"},"https://beta.openai.com/signup/"),' and click on your name on the Top-Right of the Screen. Click on "View API Keys".'),(0,a.kt)("li",{parentName:"ul"},'Click on "Create new secret key". '),(0,a.kt)("li",{parentName:"ul"},'Enter a suitable name and click on "Create secret key".')),(0,a.kt)("h4",{id:"google-api-key"},"Google API key"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go to ",(0,a.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/"},"Google Cloud Console"),". "),(0,a.kt)("li",{parentName:"ul"},'Click on "Select Project".'),(0,a.kt)("li",{parentName:"ul"},'Click on "New Project".'),(0,a.kt)("li",{parentName:"ul"},"Choose a suitable name and create a new project."),(0,a.kt)("li",{parentName:"ul"},'Go to "API and Services" from home page.'),(0,a.kt)("li",{parentName:"ul"},'Click on "Credentials" and then click on "Create Credentials" on the top. '),(0,a.kt)("li",{parentName:"ul"},'Click on "API Key" and your API Key will be created.')),(0,a.kt)("h4",{id:"custom-search-engine-id"},"Custom Search Engine ID"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Register using your gmail id."),(0,a.kt)("li",{parentName:"ul"},'Choose a suitable name and select "Search the entire web" and click on "Create".'),(0,a.kt)("li",{parentName:"ul"},'Click on "Customise" and copy the "Search Engine ID".')),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Open up the terminal at the bottom of the codespace and run the following command: ",(0,a.kt)("inlineCode",{parentName:"li"},"docker compose up --build")," and wait for the build to complete."),(0,a.kt)("li",{parentName:"ol"},"Go to the 'Ports' tab, copy the 8001 and 3000 public addresses. Replace the ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost")," link in the ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," file with the 8001 public address, and paste the 3000 public address as a string into the ",(0,a.kt)("inlineCode",{parentName:"li"},"main.py")," file."),(0,a.kt)("li",{parentName:"ol"},"Make sure to remove the trailing forward slash from the end of URL in both places."),(0,a.kt)("li",{parentName:"ol"},"Run the ",(0,a.kt)("inlineCode",{parentName:"li"},"docker compose up --build")," command again."),(0,a.kt)("li",{parentName:"ol"},"Once the build is complete, change the visibility of both ports to public and open the 3000 public URL in a new tab.")),(0,a.kt)("p",null,"You are now ready to expplore SuperAGI."))}d.isMDXComponent=!0}}]);