"""init_db

Revision ID: 115a710c4685
Revises: 
Create Date: 2023-05-28 14:35:55.544155

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '115a710c4685'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.create_table(
        'organisations',
        sa.Column('id', sa.Integer()),
        sa.Column('name', sa.String(length=256), nullable=False),
        sa.Column('description', sa.VARCHAR(1000)),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'projects',
        sa.Column('id', sa.Integer()),
        sa.Column('name', sa.String(length=256), nullable=False),
        sa.Column('description', sa.VARCHAR(1000)),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table(
        'users',
        sa.Column('id', sa.Integer()),
        sa.Column('name', sa.VARCHAR(250)),
        sa.Column('email', sa.VARCHAR(250), nullable=False),
        sa.Column('password', sa.VARCHAR(250), nullable=False),

        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )

    op.create_table(
        'agents',
        sa.Column('id', sa.Integer()),
        sa.Column('project_id', sa.Integer()),
        sa.Column('name', sa.VARCHAR(250)),
        sa.Column('description', sa.VARCHAR(1000), nullable=False),

        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
    )

    op.create_table(
        'agent_configurations',
        sa.Column('id', sa.Integer()),
        sa.Column('agent_id', sa.Integer()),
        sa.Column('key', sa.VARCHAR(250)),
        sa.Column('value', sa.VARCHAR(3000)),

        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
    )

    op.create_table(
        'agent_executions',
        sa.Column('id', sa.Integer()),
        sa.Column('agent_id', sa.Integer()),
        sa.Column('status', sa.VARCHAR(250)),
        sa.Column('name', sa.VARCHAR(250)),
        sa.Column('last_execution_time', sa.DateTime()),

        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
    )

    op.create_table(
        'agent_execution_feeds',
        sa.Column('id', sa.Integer()),
        sa.Column('agent_id', sa.Integer()),
        sa.Column('agent_execution_id', sa.Integer()),
        sa.Column('feed', sa.TEXT()),
        sa.Column('role', sa.VARCHAR(250)),
        sa.Column('extra_info', sa.VARCHAR(3000)),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
    )

    op.create_table(
        'budgets',
        sa.Column('id', sa.Integer()),
        sa.Column('agent_id', sa.Integer()),
        sa.Column('cycle', sa.String()),
        sa.Column('budget', sa.Float()),
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.PrimaryKeyConstraint('id'),
    )

    op.create_table('tools',
        sa.Column('created_at', sa.DateTime()),
        sa.Column('updated_at', sa.DateTime()),
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('folder_name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('class_name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='tools_pkey')
    )

    op.create_table(
        'resources',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String()),
        sa.Column('storage_type', sa.String()),  # FILESERVER, S3
        sa.Column('path', sa.String())  # required for S3
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
